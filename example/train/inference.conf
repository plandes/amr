#@meta {desc: 'use a trained model', date: '2024-02-01'}


## Import (corpus)
#
[import]
sections = list: lp_imp

[lp_imp]
config_file = example/train/lp.conf


## Overrides (module to use for inferencing)
#
[amr_default]
parse_model = lp_xfm_bart_base
#parse_model = lp_spring


## Default local model versions
#
[amr_model_default]
lp_xfm_bart_base_version = 0_1_0
lp_spring_version = 0_1_0
lp_t5_version = 0_1_0


## Local models
#
[amr_inference]
url = file:models


## lp_parse_xfm_bart_base parse model
#
[amr_parse_lp_xfm_bart_base_resource]
class_name = zensols.install.Resource
url = ${amr_inference:url}/model_parse_lp_parse_xfm_bart_base-v${amr_model_default:lp_xfm_bart_base_version}.tar.gz
remote_name = model_parse_lp_parse_xfm_bart_base-v${amr_model_default:lp_xfm_bart_base_version}
name = model_stog
clean_up = False

[amr_parse_lp_xfm_bart_base_installer]
class_name = zensols.install.Installer
package_resource = ${amr_model_default:package_resource}
sub_directory = lp-xfm-base-v${amr_model_default:lp_xfm_bart_base_version}
resources = instance: list: amr_parse_lp_xfm_bart_base_resource


## lp_parse_spring parse model
#
[amr_parse_lp_spring_resource]
class_name = zensols.install.Resource
url = ${amr_inference:url}/model_parse_lp_parse_spring-v${amr_model_default:lp_spring_version}.tar.gz
remote_name = model_parse_lp_parse_spring-v${amr_model_default:lp_spring_version}
name = model_stog
clean_up = False

[amr_parse_lp_spring_installer]
class_name = zensols.install.Installer
package_resource = ${amr_model_default:package_resource}
sub_directory = lp-xfm-base-v${amr_model_default:lp_spring_version}
resources = instance: list: amr_parse_lp_spring_resource
