#@meta {desc: 'use a trained model (see ../README.md)', date: '2024-02-01'}


## Import (corpus)
#
[import]
sections = list: lp_imp

[lp_imp]
config_file = example/train/lp.conf


## Overrides (module to use for inferencing)
#
[amr_default]
# uncomment the parse model to use for inferencing
#parse_model = lp_xfm_bart_base
#parse_model = lp_t5
#parse_model = lp_spring

# uncomment the text generation model to use for inferencing
generate_model = lp_t5wtense


## Default local model versions
#
[amr_model_default]
lp_xfm_bart_base_version = 0_1_0
lp_spring_version = 0_1_0
lp_t5_version = 0_1_0
lp_t5wtense_version = 0_1_0


## Local models
#
[amr_inference]
url = file:models

# lp_xfm_bart_base parse model
[amr_parse_lp_xfm_bart_base_resource]
class_name = zensols.install.Resource
url = ${amr_inference:url}/model_parse_lp_xfm_bart_base-v${amr_model_default:lp_xfm_bart_base_version}.tar.gz
remote_name = model_parse_lp_xfm_bart_base-v${amr_model_default:lp_xfm_bart_base_version}
name = model_stog
clean_up = False

[amr_parse_lp_xfm_bart_base_installer]
class_name = zensols.install.Installer
package_resource = ${amr_model_default:package_resource}
sub_directory = lp-xfm-base-v${amr_model_default:lp_xfm_bart_base_version}
resources = instance: list: amr_parse_lp_xfm_bart_base_resource


# lp_t5 parse model
[amr_parse_lp_t5_resource]
class_name = zensols.install.Resource
url = ${amr_inference:url}/model_parse_lp_t5-v${amr_model_default:lp_t5_version}.tar.gz
remote_name = model_parse_lp_t5-v${amr_model_default:lp_t5_version}
name = model_stog
clean_up = False

[amr_parse_lp_t5_installer]
class_name = zensols.install.Installer
package_resource = ${amr_model_default:package_resource}
sub_directory = lp-t5-v${amr_model_default:lp_t5_version}
resources = instance: list: amr_parse_lp_t5_resource


# lp_spring parse model
[amr_parse_lp_spring_resource]
class_name = zensols.install.Resource
url = ${amr_inference:url}/model_parse_lp_spring-v${amr_model_default:lp_spring_version}.tar.gz
remote_name = model_parse_lp_spring-v${amr_model_default:lp_spring_version}
name = model_stog
clean_up = False

[amr_parse_lp_spring_installer]
class_name = zensols.install.Installer
package_resource = ${amr_model_default:package_resource}
sub_directory = lp-spring-v${amr_model_default:lp_spring_version}
resources = instance: list: amr_parse_lp_spring_resource


# lp_t5wtense generate model
[amr_generate_lp_t5wtense_resource]
class_name = zensols.install.Resource
url = ${amr_inference:url}/model_generate_lp_t5wtense-v${amr_model_default:lp_t5wtense_version}.tar.gz
remote_name = model_generate_lp_t5wtense-v${amr_model_default:lp_t5wtense_version}
name = model_gtos
clean_up = False

[amr_generate_lp_t5wtense_installer]
class_name = zensols.install.Installer
package_resource = ${amr_model_default:package_resource}
sub_directory = lp-t5wtense-v${amr_model_default:lp_t5wtense_version}
resources = instance: list: amr_generate_lp_t5wtense_resource
