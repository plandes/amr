# @meta {desc: 'AMR API resource library', date: '2024-01-20'}


## spaCy pipeline components
#
# spaCy pipeline component to parse AMR and add as an attribute to `Doc`s
amr_parser_component:
  class_name: zensols.nlp.Component
  modules: 'list: zensols.amr'
  pipe_name: 'amr_parser'
  pipe_config:
    parser_name: 'amr_parser'
  # set the doc parser (via passed spaCy language model) to AmrParser
  initializers: 'instance: tuple: amr_parser'

amr_parser:
  class_name: zensols.amr.amrparser.AmrParser
  installer: 'instance: amr_parse_${amr_default:parse_model}_installer'

# spaCy pipeline component to add text-to-graph alignments to AMR graphs parsed
# by `amr_parser`
amr_align_component:
  class_name: zensols.nlp.Component
  modules: 'list: zensols.amr'
  pipe_name: 'amralign'

amr_align_populator:
  class_name: zensols.amr.AmrAlignmentPopulator
  aligner: best


## Client usable objects
#
# generate English from AMR graphs
amr_generator:
  class_name: zensols.amr.amrparser.AmrGenerator
  installer: 'instance: amr_generate_${amr_default:generator_model}_installer'

split_hyphen_token_mapper:
  class_name: zensols.nlp.SplitTokenMapper
  regex: "r'([-])'"

# split entity tokens for alignment and feature annotation
amr_map_filter_token_normalizer:
  class_name: zensols.nlp.MapTokenNormalizer
  embed_entities: false
  mapper_class_list:
    - filter_token_mapper
#    - split_space_token_mapper
#    - split_hyphen_token_mapper

# used to parse and populate AMR graphs
amr_pipline_doc_parser:
  class_name: zensols.nlp.SpacyFeatureDocumentParser
  token_normalizer: 'instance: amr_map_filter_token_normalizer'
  doc_class: 'class: zensols.amr.AmrFeatureDocument'
  sent_class: 'class: zensols.amr.AmrFeatureSentence'
  components: 'instance: list: amr_parser_component, amr_align_component'
  reload_components: true


# used for parsing human annotated AMR graphs with ``snt`` metadata, which is
# useful for scoring
amr_human_anon_doc_parser:
  class_name: zensols.nlp.SpacyFeatureDocumentParser
  token_normalizer: 'instance: amr_map_filter_token_normalizer'
  doc_class: 'class: zensols.amr.AmrFeatureDocument'
  sent_class: 'class: zensols.amr.AmrFeatureSentence'
  components: 'instance: list: remove_sent_boundaries_component, amr_parser_component, amr_align_component'
  reload_components: true


## Plotting and writing
#
amr_dumper:
  class_name: zensols.amr.GraphvizDumper
  target_dir: 'path: ${amr_default:report_dir}'
  overwrite_dir: true
