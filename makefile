## makefile automates the build and deployment for python projects


## Build system
#
PROJ_TYPE =		python
PROJ_MODULES =		git python-resources python-cli python-doc python-doc-deploy
INFO_TARGETS +=		appinfo
PY_DEP_POST_DEPS +=	modeldeps


## Project build
#
# additional cleanup
ADD_CLEAN +=		amr-bank-struct-v3.0-scored.csv \
			corpus/amr-bank-struct-v3.0-parsed.txt
ADD_CLEAN_ALL +=	dist
CLEAN_DEPS +=		cleanexample
CLEAN_ALL_DEPS +=	cleanalldep

# file, models and entry point
MODEL_CONF_DIR = 	etc
MODEL_NAME = 		lp
MODEL_FILE =		corpus/amr-bank-struct-v3.0.txt
ABIN =			./amr


## Project data
#
# text to parse for run examples
TEST_TEXT = 		"Barack Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, he was the first African-American president of the United States."


## Includes
#
include ./zenbuild/main.mk


## Targets
#
.PHONY:			appinfo
appinfo:
			@echo "app-resources-dir: $(RESOURCES_DIR)"

# download [spacy models](https://spacy.io/models/en)
.PHONY:			modeldeps
modeldeps:
			$(PIP_BIN) install $(PIP_ARGS) -r $(PY_SRC)/requirements-model.txt

# requirements for scoring (i.e. WLK)
.PHONY:			scoredeps
scoredeps:
			$(PIP_BIN) install $(PIP_ARGS) -r $(PY_SRC)/requirements-score.txt

# test parsing text
.PHONY:			testparse
testparse:
			$(ABIN) parse $(TEST_TEXT)

# test plotting text
.PHONY:			testplot
testplot:
			$(ABIN) plot $(TEST_TEXT)

# run all examples
.PHONY:			testexample
testexample:
			( cd example ; for i in *.py ; do ./$$i ; done )

# unit and integration testing
.PHONY:			testall
testall:		test testparse testplot testexample

# generate AMR plots of the little prince and the biomedical corpora
.PHONY:			renderexamples
renderexamples:
			$(ABIN) plotfile $(MODEL_FILE)

# train on the little prince corpus
.PHONY:			trainlp
trainlp:
			$(eval CF=$(MODEL_CONF_DIR)/spring-$(MODEL_NAME).conf)
			$(eval OR=amr_default.parse_model=spring)
			$(ABIN) train -c $(CF) --override '$(OR)'

# evaluate the little prince corpus
.PHONY:			evallp
evallp:
			$(ABIN) parsefile $(MODEL_FILE) --limit 50
			$(ABIN) score $(MODEL_FILE)

# stop any training
.PHONY:			stop
stop:
			ps -eaf | grep python | grep $(ABIN) | awk '{print $2}' | xargs kill

# additional clean up using the harness/API (data dir)
.PHONY:			cleanalldep
cleanalldep:
			$(ABIN) clean --clevel 1

# clean data generated by examples
.PHONY:			cleanexample
cleanexample:
			$(ABIN) clean --clevel 0
			rm -fr example/data

# remove the ./data and ./corpus dir
.PHONY:			vaporize
vaporize:
			$(ABIN) clean --clevel 2
